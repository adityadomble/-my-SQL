#1  List all customers along with their email addresses.
SELECT  customer_id,first_name,last_name,email
FROM customer;


#2  Retrieve all films with a rental rate greater than 4.

 SELECT film_id,title,rental_rate
 FROM film
 WHERE rental_rate>4;
 
 #3. Display the first and last names of all actors
 
 SELECT actor_id,first_name,last_name
 FROM actor;
 
 #4  Retrieve all films released in 2006.
 
 SELECT film_id,title,release_year
 FROM film
 WHERE release_year=2006;
 
 
 #5. Show all categories in the category table.
 
 SELECT category_id ,name
 FROM category;
 
 
 #6 . Find all customers whose first name starts with 'J'.
 
 SELECT  first_name
 FROM customer
 WHERE first_name LIKE 'J%';
 
 #7. Retrieve all films where the title contains the word "ACTION."

select title,film_id
from film
where title like "%ACTION%";

#8. List all films with a length between 90 and 120 minutes.

select  film_id,title,length
from film
where length between 90 and 120;

#9. Sort the list of stores by their IDs in descending order

use sakila;
#14. Count the total number of customers in each store.

select store_id,count(*) store_id
from customer
group by store_id;

#15. Calculate the total revenue generated by the rental transactions.

select sum(amount)
from payment;

#16 Group films by their rating and count how many films belong to each rating

select rating,count(*) film_id 
from film
group by rating;


#17. Find the total length of films in each category.

select c.name  ,sum(f.length) as total_length
from category c
join film_category fc on fc.category_id=c.category_id
join film f on fc.film_id=f.film_id
group by c.name;



#18 . List the number of films available for each replacement cost.

select replacement_cost,
count(*) film_id
from film
group by replacement_cost;



#19 .Find the average rental rate for each film category.


select c.name ,avg( f.rental_rate) 
from category.c
join film_category fc
on fc.category_id=c.category_id
join film f on f.film_id = fc.film_id
group by c.name;



select c.name ,avg (f.rental_rate)
as avg_rental_rate
from category.c
join film_category fc
ON fc.category_id =c.category_id
join film f on f.film_id = fc.film_id
group by c.name; 
use sakila;


#29Find the stores with the most customers using a subquery

select s.store_id from store s
where s.store_id in 
(select  c.store_id  from customer c
group by customer_id
order by count(customer_id) desc
)
limit 1;






#29Find the stores with the most customers using a subquery

select s.store_id from store s
where s.store_id in 
(select c.store_id from customer c
group by c.customer_id
order by count(customer_id) desc
)
limit 1;





#29Find the stores with the most customers using a subquery

select s.store_id from store s
where s.store_id in 
(select c.store_id from customer c
group by c.customer_id
order by count(customer_id) desc 
)
limit 1;





use sakila;
SELECT * FROM rental
WHERE 
rental_date >= date_sub(curdate() , interval 30 Day);

#31List all rental transactions that occurred in the last 30 days
SELECT * FROM rental
WHERE rental_date 
BETWEEN "2005-05-24" and "2005-06-04";

select * from rental
where rental_date
between "2005-05-24" and "2005-06-02";


#32 Find the most recent rental transaction in the database



use sakila;
#32 Find the most recent rental transaction in the database






SELECT c.first_name, c.last_name , r.rental_date
FROM customer c
JOIN rental r ON r.customer_id = c.customer_id
ORDER BY r.rental_date desc
limit 1;





#33 Show the total number of rentals for each month in 2005
 select  monthname (rental_date) as month,
 count(*) as total_rental from rental
 where year (rental_date)=2005 
 group by month;
 
 
 
 select * from rental;
 
 use sakila;
 
 #33 Show the total number of rentals for each month in 2005
 select monthname(rental_date) as month,
 count(*) as  rental_date
 from rental
 where year(rental_date) =2005
 GROUP BY  month;


#33 Show the total number of rentals for each month in 2005

select monthname(rental_date) as  month,
count(*) as rental_date
from rental
where year(rental_date)=2005
group by month;


SELECT monthname(rental_date) AS month,
count(*) AS total_rentals
FROM rental
WHERE YEAR(rental_date) = 2005
GROUP BY month;


SELECT monthname(rental_date) as month,
count(*) as  total_rentals
from  rental 
where year (rental_date)=2005
group by month;




select monthname (rental_date) as month,
count(*) as total_rentals
from rental
where year (rental_date)=2005
group by month;





#34 Calculate the total number of days each film has been rented

select f.title,
sum (datediff(r.rental_date,return_date))
from f.film 
join inventory i on i.film_id = f.film_id
join rental r on r.inventory_id = i.inventory_id
group by f.film
order by total_days desc; 










select f.title,
sum(datediff(r.rental_date,r.return_date))
as total_days
from film f 
join inventory i on i.film_id =f.film_id
join rental r on r.inventory_id =i .inventory_id
group by f.title
order by total_days desc; 

use sakila;

SELECT f.title, 
SUM(datediff(r.return_date , r.rental_date))
AS total_days
FROM film f 
JOIN inventory i ON i.film_id = f.film_id
JOIN rental r ON r.inventory_id = i.inventory_id
GROUP BY f.title
ORDER BY total_days desc; 

#35 Retrieve all customers who registered after January 1, 2006

select first_name,last_name ,create_date
from customer c
where year (create_date)=2006;



#35 Retrieve all customers who registered after January 1, 2006

select c.customer_id,c.first_name,c.last_name,c.create_date
from customer c
where year( create_date)=2006;



#36 Retrieve the film titles along with the names of customers who rented them and the rental dates


select f.title ,c.first_name,c.last_name,r.rental_date
from film f
join inventory i on f.film_id=i.film_id
join rental r on r.inventory_id=i.inventory_id
join customer  c on c.customer_id=r.customer_id;


#36 Retrieve the film titles along with the names of customers who rented them and the rental dates

select f.film_id,c.first_name,c.last_name,r.rental_date
from film f
join inventory i on i.film_id= f.film_id
join rental r on r.inventory_id=i.inventory_id
join customer c on c.customer_id=r.customer_id;




select f.title,c.first_name,c.last_name,r.rental_date
from film f
join inventory i on i.film_id=f.film_id
join rental r on r.inventory_id=i.inventory_id
join customer c on c.customer_id=r.customer_id;


#37 Find all stores with their respective revenue generated from rentals
USE SAKILA;
SELECT STO.store_id,
SUM(P.amount) AS TOTAL_REVENUE FROM store sto
JOIN STAFF STA ON STA.store_id=STO.store_id
JOIN PAYMENT P ON STA.staff_id= P.staff_id
GROUP  BY sto. store_id; 


#37 Find all stores with their respective revenue generated from rentals

select sto.store_id,sum(p.amount) from store sto
join staff sta on sta.store_id=sto.store_id
join payment p on sta.staff_id=p.staff_id
group by sto.store_id;













select sto.store_id,
sum(p.amount) as total_amount  from store sto
join staff sta on sta.store_id=sto.store_id
join payment p on sta.staff_id=p.staff_id
group by sto .store_id;


SELECT sto.store_id , 
SUM(p.amount) as total_revenue
FROM store sto
JOIN staff sta ON sta.store_id = sto.store_id
JOIN payment p ON sta.staff_id = p.staff_id
GROUP BY sto.store_id;



